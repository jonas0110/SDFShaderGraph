/*! ez.render 09-06-2015 */
var EZ=EZ||{};EZ.ZERO=vec3.fromValues(0,0,0),EZ.LEFT=vec3.fromValues(1,0,0),EZ.UP=vec3.fromValues(0,1,0),EZ.FRONT=vec3.fromValues(0,0,1),EZ.WHITE=vec3.fromValues(1,1,1),EZ.BLACK=vec3.fromValues(0,0,0),EZ.temp_mat4=mat4.create(),EZ.temp_vec2=vec3.create(),EZ.temp_vec3=vec3.create(),EZ.temp_vec4=vec4.create(),EZ.temp_quat=quat.create(),EZ.temp_quat2=quat.create(),EZ.temp_mat3=mat3.create(),EZ.PRIORITY_BACKGROUND=30,EZ.PRIORITY_OPAQUE=20,EZ.PRIORITY_ALPHA=10,EZ.PRIORITY_HUD=0,EZ.entity_count=0,EZ.Entity=function(){this.uuid=EZ.entity_count++,this.name="",this.type="entity",this.position=vec3.create(),this.quat=quat.create(),this.scale=vec3.fromValues(1,1,1),this.up=vec3.clone(EZ.UP),this.local_transform=mat4.create(),this.global_transform=mat4.create(),this.local_needs_update=!0,this.global_needs_update=!0,this.parent=null,this.children=[],this.visible=!0,this.follow=null},EZ.Entity.prototype={constructor:EZ.Entity,updateLocalMatrix:function(){mat4.identity(this.local_transform),mat4.translate(this.local_transform,this.local_transform,this.follow?this.follow.position:this.position),mat4.fromQuat(EZ.temp_mat4,this.quat),mat4.mul(this.local_transform,this.local_transform,EZ.temp_mat4),mat4.scale(this.local_transform,this.local_transform,this.scale),this.local_needs_update=!1,this.global_needs_update=!0},updateGlobalMatrix:function(a){(this.local_needs_update||this.follow&&this.follow.local_needs_update)&&this.updateLocalMatrix(),this.parent&&(a||this.parent.updateGlobalMatrix(),mat4.mul(this.global_transform,this.local_transform,this.parent.global_transform)),this.global_needs_update=!1},lookAt:function(a){mat4.lookAt(this.global_transform,this.position,a,this.up),quat.fromMat4(this.quat,this.global_transform),this.local_needs_update=!0},addChild:function(a){if(a.parent)throw"the child "+a.name+" has already a parent";a.parent=this,this.children.push(a),a.propagate("updateGlobalMatrix",[!0])},removeChild:function(a){if(a.parent!==this)throw"the child "+a.name+" has a different parent";a.parent=null,this.children[this.children.length]=a;for(var b=this.children.length-1;b>=0;b--)this.children[b]===a&&this.children.splice(b,1);this.propagate("updateGlobalMatrix",[!0])},followEntity:function(a){this.follow=a},propagate:function(a,b){for(var c=this.children.length-1;c>=0;c--){var d=this.children[c];d&&(d[a]&&d[a].apply(d,b),d.propagate(d,b))}},getAllChildren:function(){for(var a=[],b=this.children.length-1;b>=0;b--){var c=this.children[b];a[a.length]=c,c.getAllChildren(a)}return a},getLeft:function(){return this.getGlobalVector([1,0,0])},getUp:function(){return this.getGlobalVector([0,1,0])},getFront:function(){return this.getGlobalVector([0,0,1])},getGlobalVector:function(a,b){return vec3.transformMat4(b||vec3.create(),a,this.global_transform)}},EZ.EMesh=function(){EZ.Entity.call(this),this.color=vec4.fromValues(1,1,1,1),this.render_priority=EZ.PRIORITY_OPAQUE,this.shader="",this.mesh="",this.mesh_obj=null,this.textures={},this.uniforms={u_color:this.color,u_color_texture:0},this.flags={flip_normals:!1,depth_test:!0,depth_write:!0,blending:!1,blending_mode:"additive",two_sided:!1},this.type="mesh"},EZ.EMesh.prototype=Object.create(EZ.Entity.prototype),EZ.EMesh.prototype.constructor=EZ.EMesh,EZ.EMesh.prototype.setTexture=function(a,b){b?"string"==typeof b&&(this.textures[a]=b):this.textures[a]=null},EZ.EMesh.prototype.clearTextures=function(){this.textures={}},EZ.EMesh.prototype.setSkyBox=function(){this.flags.depth_write=!1,this.flags.depth_test=!1,this.render_priority=EZ.PRIORITY_BACKGROUND,this.flags.flip_normals=!0},EZ.EMesh.prototype.render=function(a){if(this.mesh&&(this.mesh_obj=gl.meshes[this.mesh]),this.mesh_obj){var b=0,c=null;for(var d in this.textures){var e=this.textures[d];c=gl.textures[e],c||(c=gl.textures.white),this.uniforms["u_"+d+"_texture"]=c.bind(b++)}var f=null;this.shader&&(f=gl.shaders[this.shader]),f||(f=gl.shaders.flat),gl.frontFace(this.flags.flip_normals?gl.CW:gl.CCW),gl[this.flags.depth_test===!1?"disable":"enable"](gl.DEPTH_TEST),this.flags.depth_write===!1&&gl.depthMask(!1),gl[this.flags.two_sided===!0?"disable":"enable"](gl.CULL_FACE),this.flags.blending&&(gl.enable(gl.BLEND),"additive"==this.flags.blending_mode?gl.blendFunc(gl.SRC_ALPHA,gl.ONE):"substractive"==this.flags.blending_mode?gl.blendFunc(gl.ZERO,gl.ONE_MINUS_SRC_COLOR):"multiplicative"==this.flags.blending_mode?gl.blendFunc(gl.ZERO,gl.SRC_COLOR):"alpha_blended"==this.flags.blending_mode?gl.blendFunc(gl.SRC_ALPHA,gl.ONE_MINUS_SRC_ALPHA):"screen"==this.flags.blending_mode&&gl.blendFunc(gl.ONE,gl.ONE_MINUS_SRC_COLOR)),[GL.SRC_ALPHA,GL.ONE],this.setExtraUniforms(f),f.uniforms(this.uniforms),f.uniforms(a.uniforms),f.draw(this.mesh_obj,void 0===this.flags.primitive?gl.TRIANGLES:this.flags.primitive),this.flags.flip_normals&&gl.frontFace(gl.CCW),this.flags.depth_test===!1&&gl.enable(gl.DEPTH_TEST),this.flags.blending&&gl.disable(gl.BLEND),this.flags.two_sided&&gl.disable(gl.CULL_FACE),this.flags.depth_write===!1&&gl.depthMask(!0)}},EZ.EMesh.prototype.setExtraUniforms=function(a){var b={};for(var c in a.globals)b[a.globals[c].name]=a.globals[c].getValue();a.uniforms(b)},EZ.EScene=function(){EZ.Entity.call(this),this.time=0,this.type="scene"},EZ.EScene.prototype=Object.create(EZ.Entity.prototype),EZ.EScene.prototype.constructor=EZ.EScene,EZ.EScene.prototype.update=function(a){this.time+=a},EZ.ECamera=function(a,b,c,d){EZ.Entity.call(this),this.target=vec3.create(),this.aspect=b||1,this.fov=a||45,this.near=c||.1,this.far=d||1e3,this.projection_matrix=mat4.create(),this.view_projection=mat4.create(),this.view=mat4.create(),this.type="camera"},EZ.ECamera.prototype=Object.create(EZ.Entity.prototype),EZ.ECamera.prototype.constructor=EZ.ECamera,EZ.ECamera.prototype.updateProjectionMatrix=function(){mat4.invert(this.view,this.global_transform),mat4.perspective(this.projection_matrix,this.fov*DEG2RAD,this.aspect,this.near,this.far),mat4.mul(this.view_projection,this.projection_matrix,this.view)},EZ.CameraController=function(a){if(a&&!a.context)throw"CameraController can't work without the canvas";this.renderer=a,this.ctx=a.context,this.cam=null,this.needs_update=!0,this.needs_rotation_update=!0,this.radius=vec3.create(),this.scale=1,this.zoom_speed=1;var b=this;this.onMouseMove=function(a){if(a.dragging){var c=a.deltax>.1||a.deltax<-.1?-a.deltax:0;c&&(quat.setAxisAngle(EZ.temp_quat,[0,1,0],c*DEG2RAD),b.cam.needs_local_update=!0,b.needs_x_rot=!0,b.needs_update=!0);var d=b.cam.getFront();vec3.normalize(d,d);var e=vec3.dot([0,1,0],d),f=.01,g=a.deltay>.1?f:a.deltay<-.1?-f:0;if(.99>e+g&&e+g>-.99&&(c=a.deltay>.1||a.deltay<-.1?-a.deltay:0)){var h=b.cam.getLeft();vec3.sub(h,h,b.cam.position),quat.setAxisAngle(EZ.temp_quat2,h,c*DEG2RAD),b.cam.needs_local_update=!0,b.needs_y_rot=!0,b.needs_update=!0}}},this.onMouseDown=function(){},this.onMouseWheel=function(a){Math.pow(.95,b.zoom_speed);a.deltaY<1?b.scale*=.95:b.scale/=.95,b.needs_update=!0},this.update=function(){this.cam=this.renderer.current_cam,this.cam&&this.needs_update&&(vec3.sub(EZ.temp_vec4,this.cam.position,this.cam.target),vec3.scale(EZ.temp_vec4,EZ.temp_vec4,this.scale),this.needs_x_rot&&vec3.transformQuat(EZ.temp_vec4,EZ.temp_vec4,EZ.temp_quat),this.needs_y_rot&&vec3.transformQuat(EZ.temp_vec4,EZ.temp_vec4,EZ.temp_quat2),vec3.add(this.cam.position,this.cam.target,EZ.temp_vec4),this.scale=1,this.cam.lookAt(this.cam.target),this.needs_update=!1,this.needs_y_rot=!1,this.needs_x_rot=!1)},this.ctx.captureMouse(!0),this.ctx.onmousewheel=this.onMouseWheel,this.ctx.onmousedown=this.onMouseDown,this.ctx.onmousemove=this.onMouseMove,this.ctx.captureKeys(),this.ctx.onkeydown=function(){}},EZ.Renderer=function(){this.current_cam=null,this.current_scene=null,this.cam_controller=null,this.color=[0,0,0,0],this.mvp_matrix=mat4.create(),this.uniforms={u_view:{},u_viewprojection:{},u_model:{},u_mvp:this.mvp_matrix},this.now=getTime(),this.then=this.now,this.dt=0,this.total_time=0},EZ.Renderer.prototype={constructor:EZ.Renderer,addMesh:function(a,b){this.context!=window.gl&&this.context.makeCurrent(),this.context.meshes[a]=b},addTextureFromURL:function(a,b,c,d){return c=c||{},this.context.textures[a]=GL.Texture.fromURL(b,c,d,this.context)},addCubeMapFromURL:function(a,b,c,d){return c=c||{},this.context.textures[a]=GL.Texture.cubemapFromURL(b,c,d,this.context)},loadAssets:function(){var a={lat:128,size:.5};a["long"]=128,this.addMesh("sphere",GL.Mesh.sphere(a)),this.addMesh("cylinder",GL.Mesh.cylinder({height:2,radius:.1})),this.addMesh("circle",GL.Mesh.circle({xz:!0})),this.addMesh("grid",GL.Mesh.grid({size:1,lines:50})),this.addMesh("box",GL.Mesh.box({size:1})),this.addMesh("plane",GL.Mesh.plane({size:1,detail:100})),this.addMesh("lee",GL.Mesh.fromURL("assets/meshes/lee.obj")),gl.textures={},gl.textures.notfound=new GL.Texture(1,1,{filter:gl.NEAREST,pixel_data:new Uint8Array([0,0,0,255])}),gl.textures.white=new GL.Texture(1,1,{filter:gl.NEAREST,pixel_data:new Uint8Array([255,255,255,255])})},createCanvas:function(a,b,c){this.context=GL.create({width:a,height:b}),this.context.canvas.id=c,this.context.canvas.width=a,this.context.canvas.height=b;var d=this;this.context.ondrop=function(a){a.preventDefault();var b,c=a.dataTransfer.files[0],e=c.name,f=e.lastIndexOf(".");if(-1==f)return b="";b=e.substr(f+1).toLowerCase();var g=new FileReader;g.onload=function(a){var b=a.target.result;node.onDropFile(b,e,c,null,gl),d.onDropFile&&d.onDropFile(b,e,c),LiteGraph.dispatchEvent("contentChange",null,null)};var h=c.type.split("/")[0];return"text"==h||"json"==b?g.readAsText(c):"image"==h?g.readAsDataURL(c):g.readAsArrayBuffer(c),!1},this.cam_controller=new EZ.CameraController(this),this.loadAssets(),this.createShaders()},setModelMatrix:function(a,b){mat4.multiply(this.mvp_matrix,b.view_projection,a)},setUniforms:function(a,b){this.uniforms={u_eye:a.position,u_view:a.view,u_viewprojection:a.view_projection,u_model:b.global_transform,u_mvp:this.mvp_matrix,u_time:this.total_time,u_frame_time:this.dt}},clearContext:function(){this.context.clearColor(this.color[0],this.color[1],this.color[2],this.color[3]),this.context.clear(gl.COLOR_BUFFER_BIT|gl.DEPTH_BUFFER_BIT)},update:function(){this.now=getTime();var a=.001*(this.now-this.then);this.then=this.now,this.dt=a,this.total_time+=a,this.current_scene&&this.current_scene.update(a),this.cam_controller.update(a)},render:function(a,b){if(!a)throw"Renderer.render: scene not provided";if(!b)throw"Renderer.render: camera not provided";this.context!=window.gl&&this.context.makeCurrent(),this.current_cam=b,this.current_scene=a,this.update(),this.clearContext();for(var c=a.getAllChildren(),d=null,e=c.length-1;e>=0;e--)d=c[e],d.updateGlobalMatrix(!0);b.updateProjectionMatrix(),c.sort(function(a,b){return a.render_priority-b.render_priority});for(var e=c.length-1;e>=0;e--)d=c[e],d.render&&d.visible&&(this.setModelMatrix(d.global_transform,b),this.setUniforms(b,d),d.render(this))},createShaders:function(){var a=new GL.Shader("				precision mediump float;				attribute vec3 a_vertex;				uniform mat4 u_mvp;				void main() {					gl_Position = u_mvp * vec4(a_vertex,1.0);					gl_PointSize = 5.0;				}				","				precision mediump float;				uniform vec4 u_color;				void main() {				  gl_FragColor = u_color;				}			");gl.shaders.flat=a;var b={u_lightvector:vec3.fromValues(1,0,0),u_lightcolor:EZ.WHITE},c=new GL.Shader("			precision mediump float;			attribute vec3 a_vertex;			attribute vec3 a_normal;			varying vec3 v_normal;			uniform mat4 u_mvp;			uniform mat4 u_model;			void main() {				v_normal = (u_model * vec4(a_normal,0.0)).xyz;				gl_Position = u_mvp * vec4(a_vertex,1.0);			}			","			precision mediump float;			varying vec3 v_normal;			uniform vec3 u_lightcolor;			uniform vec3 u_lightvector;			uniform vec4 u_color;			void main() {			  vec3 N = normalize(v_normal);			  gl_FragColor = u_color * max(0.0, dot(u_lightvector,N)) * vec4(u_lightcolor,1.0);			}		");gl.shaders.phong=c,gl.shaders.phong.uniforms(b);var d=new Shader("				precision mediump float;				attribute vec3 a_vertex;				attribute vec3 a_normal;				varying vec3 v_pos;				varying vec3 v_normal;				uniform mat4 u_mvp;				uniform mat4 u_model;				void main() {					v_pos = a_vertex.xyz;					v_normal = (u_model * vec4(a_normal,0.0)).xyz;					gl_Position = u_mvp * vec4(a_vertex,1.0);				}				","				precision mediump float;				varying vec3 v_normal;				varying vec3 v_pos;				uniform vec4 u_color;				uniform samplerCube u_cubemap_texture;				void main() {				  vec3 N = normalize(v_normal);				  gl_FragColor = u_color * textureCube( u_cubemap_texture, v_pos );				}			");gl.shaders.cubemap=d;var e=new Shader("				precision mediump float;				attribute vec3 a_vertex;				attribute vec3 a_normal;				varying vec3 v_pos;				varying vec3 v_normal;				varying vec3 v_refl;				uniform vec3 u_eye;				uniform mat4 u_mvp;				uniform mat4 u_model;				void main() {					v_pos = (u_model * vec4(a_vertex,1.0)).xyz;					v_normal = (u_model * vec4(a_normal,0.0)).xyz;					gl_Position = u_mvp * vec4(a_vertex,1.0);				    vec3 I = v_pos - u_eye;				    v_refl = reflect(I,v_normal);				}				","				precision mediump float;				varying vec3 v_normal;				varying vec3 v_pos;				varying vec3 v_refl;				uniform vec4 u_color;				uniform vec3 u_lightvector;				uniform samplerCube u_cubemap_texture;				void main() {				  vec3 N = normalize(v_normal);				  vec4 color = u_color * textureCube( u_cubemap_texture, v_refl);				  gl_FragColor = color *(0.2  +  max(0.2, dot(u_lightvector, N)));				}			");gl.shaders.env_reflection=e,gl.shaders.env_reflection.uniforms(b);var f=new Shader("				precision mediump float;				attribute vec3 a_vertex;				attribute vec3 a_normal;				varying vec3 v_pos;				varying vec3 v_normal;				uniform mat4 u_mvp;				uniform mat4 u_model;				void main() {					v_pos = (u_model * vec4(a_vertex,1.0)).xyz;					v_normal = (u_model * vec4(a_normal,0.0)).xyz;					gl_Position = u_mvp * vec4(a_vertex,1.0);				}				","				precision mediump float;				varying vec3 v_normal;				varying vec3 v_pos;				varying vec3 v_refr;				uniform vec3 u_eye;				uniform vec4 u_color;				uniform vec3 u_lightvector;				uniform samplerCube u_cubemap_texture;				void main() {                  vec3 N = normalize(v_normal);				  vec3 I = normalize(v_pos - u_eye);				  vec3 refr = refract(I,N, (0.666));				  vec4 RR_color = u_color * textureCube( u_cubemap_texture, refr);				  gl_FragColor = RR_color;				}			");gl.shaders.env_refraction=f,gl.shaders.env_refraction.uniforms(b)},append:function(a){a.appendChild(this.context.canvas)},resize:function(a,b){this.context!=window.gl&&this.context.makeCurrent(),gl.canvas.width=a,gl.canvas.height=b,gl.viewport(0,0,a,b),this.current_cam&&(this.current_cam.aspect=gl.canvas.width/gl.canvas.height)}};